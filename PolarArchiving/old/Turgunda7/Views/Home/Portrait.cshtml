@using System.Linq
@using System.Xml.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc

@model Turgunda7.Models.PortraitModel
@{
    if (Model == null || Model.xresult == null) { return; }
    string user = (new Turgunda7.Models.UserModel(Context.Request)).Uuser;
    bool edit = user != null; //User.IsInRole("user");
    string id = Model.id;
    bool candelete = true;
    //string page_url = Context.Request.QueryString.Value;
    //int pos = page_url.ToLower().IndexOf("home/portrait");
    //string ef_url = page_url.Substring(0, pos - 1);

    bool astable = false;
    string at = Context.Request.Query["at"];
    if (at != null) { astable = true; }

    bool canchangecassette = user != null
        && Model.type_id == "http://fogid.net/o/cassette"
        && SObjects.GetCassetteInfoById(id).cassette.Owner == user;

}



@*<script type="text/jscript">
    function SubmitForm(u, eid, comm) {
        var data = comm + $('#frm_' + eid).serialize();
        //alert(data);
        var html = $.ajax({
            //url: '~/Home/EditForm',
            //url: 'EditForm',
            url: u,
            async: false,
            type: 'POST',
            dataType: 'html',
            data: data
        }).responseText;
        $('#' + eid).html(html);
        return false;
    }
    function KeyP(u, key, eid, comm) {
        //alert('code=' + key);
        if (key === 13) {
            SubmitForm(u, eid, comm);
            return false;
        } else {
            return true;
        }
    }
</script>*@

<!-- ================= Начало построения ================= -->
<div>@Model.typelabel</div>

<!-- ================= Загрузка файлов ================= -->
@if (canchangecassette)
{
    <form method="post" enctype="multipart/form-data" asp-controller="UploadFiles" asp-action="Index">
        <p>Upload one or more files using this form:</p>
        <input type="file" name="files" multiple />
        <input type="hidden" name="id" value="@id" />
        <input type="submit" value="Upload" />
    </form>
    <br />
    <br />
    <form method="get" action='@Url.Content("~/Home/ConnectUser")'>
        <p>Allow user to edit cassette:</p>
        <input type="text" name="userlogin" />
        <input type="hidden" name="id" value="@id" />
        <input type="submit" value="разрешить" />
    </form>


}

@if (Model.uri == null)
{
    @*<h2 style="color: #5c87b2;">@Model.name : uri not found!</h2>*@
}
else
{
    if (Model.prev != null || Model.next != null)
    {
        <div>
            @if (Model.prev != null)
            {<a href='@Url.Content("~/Home/Portrait?id=" + Model.prev)'>пред.</a> }
            else
            { <span>пред.</span>}
            @if (Model.next != null)
            {<a href='@Url.Content("~/Home/Portrait?id=" + Model.next)'>след.</a> }
            else
            { <span>след.</span>}
        </div>
    }

    if (Model.type_id == "http://fogid.net/o/photo-doc")
    {
        string url = Url.Content("~/Docs/GetPhoto?s=medium&u=" + Model.uri);
        <img src="@url" />
    }
    else if (Model.type_id == "http://fogid.net/o/video-doc")
    {
        string url = Url.Content("~/Docs/GetVideo?u=" + Model.uri);
        <video controls>
            <source type="video/webm" src='@(url + "&ext=webm")' />
            <source type="video/mp4" src='@(url + "&ext=mp4")' />
            Your browser does not support the video tag.
        </video>
        @*
            <source type="video/webm; codecs='vp8.0, vorbis'" src='@(url + "&ext=webm")' />
        *@

    }
    else if (Model.type_id == "http://fogid.net/o/audio-doc")
    {
        string url = Url.Content("~/Docs/GetAudio?u=" + Model.uri);
        @*
            <audio controls src="@url" />
        *@
        <p>
            <audio src="@url" controls></audio>
        </p>
    }

    if (Model.prev != null || Model.next != null)
    {
        <div>
            @if (Model.prev != null)
            {<a href='@Url.Content("~/Home/Portrait?id=" + Model.prev)'>пред.</a> }
            else
            { <span>пред.</span>}
            @if (Model.next != null)
            {<a href='@Url.Content("~/Home/Portrait?id=" + Model.next)'>след.</a> }
            else
            { <span>след.</span>}
        </div>
    }
    @*//string[] doclist = (string[])Session["doclist"];
        string sbor = Context.Session.GetString("doclist");
        string[] doclist = sbor == null ? new string[0] : sbor.Split('|');
        if (doclist != null)
        {
            var pair = doclist.Select((s, i) => new { s = s, i = i }).FirstOrDefault(si => si.s == id);
            if (pair != null)
            {
                int ind = pair.i;
                string urlprev = ind <= 0 ? null : Url.Content("~/Home/Portrait?id=" + doclist[ind - 1]);
                string urlnext = ind >= doclist.Length - 1 ? null : Url.Content("~/Home/Portrait?id=" + doclist[ind + 1]);
                <div>
                    @if (urlprev != null)
                    {
                        <a href="@urlprev">пред.</a> }
                    else
                    {
                        <span>пред.</span>}
                    <span> </span>
                    @if (urlnext != null)
                    {
                        <a href="@urlnext">след.</a> }
                    else
                    {
                        <span>след.</span>}
                    @{
                        bool isapart = Model.xresult.Elements("ip")
                            .Where(ip => ip.Attribute("prop").Value == "http://fogid.net/o/partItem")
                            .Any(ip => ip.Elements("ir")
                                .Where(irr => irr.Attribute("type").Value == "http://fogid.net/o/DocumentPart")
                                .Any(irr => irr.Elements("r").Any()));
                        string ur = "";

                    }
                </div>
            }
        }*@
}
@{
    bool hasinverse = Model.xresult.Elements("ip").SelectMany(ip => ip.Elements("ir")).Any(ir => ir.Element("r") != null);
}



@*@HTable(Model.xresult, id, null, Model.xresult.Element("r").Attribute("type").Value, edit, !hasinverse)*@
@*@helper HTable(XElement container, string iprop, string ttype)*@
@{
    // Parameters
    XElement container = Model.xresult;
    string iprop = null;
    string ttype = Model.xresult.Element("r").Attribute("type").Value;
    candelete = !hasinverse;

    string bodyid = iprop == null ? "_headerid_" : "_" + iprop.Substring(iprop.LastIndexOf('/') + 1) + "_" + ttype.Substring(iprop.LastIndexOf('/') + 1);
    XElement[] headerelements = container.Element("header").Elements().ToArray();
    <table>
        <thead>
            <tr>
                @foreach (XElement f in headerelements)
                {
                    <th>
                        @if (f.Name == "f")
                        {@f.Value }
                    else
                    { @f.Element("label").Value}
                    </th>
                }
                @if (edit)
                {
                    <td></td>
                }
            </tr>
        </thead>
        <tbody id="@bodyid">
            @foreach (XElement r in container.Elements("r"))
            {
                string eid = r.Attribute("id").Value;
                <tr id='@eid' valign="top">
                    @{
                        XElement[] rowelements = r.Elements().ToArray();
                        for (int i = 0; i < rowelements.Length; i++)
                        {
                            XElement cr = rowelements[i];
                            XElement f = headerelements[i];
                            if (cr.Name == "c")
                            {
                                XAttribute valueTypeAtt = f.Attribute("valueType");
                                string value = cr.Value;
                                if (valueTypeAtt != null) { value = TurgundaCommon.ModelCommon.GetEnumStateLabel(valueTypeAtt.Value, value); }
                                <td class="d">@value</td>
                            }
                            else
                            {
                                XAttribute d_att = cr.Attribute("id");
                                string d_id = d_att == null ? "" : d_att.Value;
                                XAttribute d_ty = cr.Attribute("type");
                                string d_tid = d_ty == null ? "" : d_ty.Value;
                                XElement fr = f.Elements("r").FirstOrDefault(rr => rr.Attribute("type").Value == d_tid);
                                XElement[] frow = new XElement[0];
                                if (fr != null)
                                {
                                    frow = fr.Elements("f").ToArray();
                                }
                                var qu = cr.Elements()
                                    .Select(c => { return new XText(c.Value); }).ToArray();
                                bool isfirst = true;
                                int j = 0;
                                <td>
                                    @foreach (XElement c in cr.Elements())
                                    {
                                        string val = c.Value;
                                        if (j < frow.Length)
                                        {
                                            var valueTypeAtt = frow[j].Attribute("valueType");
                                            if (valueTypeAtt != null)
                                            {
                                                val = TurgundaCommon.ModelCommon.GetEnumStateLabel(valueTypeAtt.Value, val);
                                            }
                                        }
                                        if (!string.IsNullOrEmpty(val) && isfirst)
                                        {
                                            string url = Url.Content("~/Home/Portrait?id=" + d_id);
                                            isfirst = false;
                                            <a href="@url">@val</a>
                                        }
                                        else
                                        {
                                            <span>@val</span>
                                        }
                                        j++;
                                    }
                                </td>
                            }
                        }
                        if (edit)
                        {
                            //var pars = "firsttime=True&amp;bid=" + id + "&amp;eid=" + eid + "&amp;etype=" + ttype +
                            //    "&amp;nc=" + r.Elements().Count() + "&amp;d=" + System.DateTime.Now.Ticks;
                            var parss = "firsttime=True&bid=" + id + "&eid=" + eid + "&etype=" + ttype +
                                "&nc=" + r.Elements().Count() + "&d=" + (new System.Random()).Next();
                            var uc = @Url.Content("~/Home/EditForm?" + parss);
                            <td>
                                @*@Ajax.ActionLink("ред", "EditForm", new { firsttime = true, bid = id, eid = eid, etype = ttype, iprop = iprop, nc = r.Elements().Count(), d = System.DateTime.Now.Ticks }, new AjaxOptions()
                                    {
                                        HttpMethod = "Post",
                                        InsertionMode = InsertionMode.Replace,
                                        UpdateTargetId = eid
                                    })*@
                                @*<a data-ajax="true" data-ajax-method="Post" data-ajax-mode="replace" data-ajax-update="#@eid"
                                   href="~/Home/EditForm?@pars">ред</a>*@

                                <a href="" onclick="event.preventDefault(); HttpAsk('get', '@Url.Content("~/Home/EditForm")', '@parss', '@eid', 'replace', null)">ред</a>

                                @if (candelete)
                                {
                                    @*@Ajax.ActionLink("x", "DeleteRow", new { eid = eid, d = DateTime.Now.Ticks }, new AjaxOptions()
                                        {
                                            HttpMethod = "Get",
                                            InsertionMode = InsertionMode.Replace,
                                            UpdateTargetId = eid,
                                            Confirm = "Уничтожить?"
                                        })*@
                                    @*<a data-ajax="true" data-ajax-confirm="Уничтожить?" data-ajax-method="Get" data-ajax-mode="replace" data-ajax-update="#@eid"
                                       href="~/Home/DeleteRow?eid=@eid&amp;d=@System.DateTime.Now.Ticks">x</a>*@
                                    <a href="" onclick="event.preventDefault(); HttpAsk('get', '@Url.Content("~/Home/DeleteRow")', 'eid=@eid&amp;d=@System.DateTime.Now.Ticks', '@eid', 'replace', 'уничтожить?');">x</a>
                                }
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}


<table>
    @foreach (XElement ip in Model.xresult.Elements("ip"))
    {
        if (!edit && !ip.Elements("ir").Any((XElement irr) => irr.Element("r") != null)) { continue; }
        var qu = ip.Elements("ir").Where(irr => irr.Elements("r").Count() == 0);

        <tr valign="top">
            <td>@ip.Element("label").Value</td>
            <td>
                @foreach (XElement ir in ip.Elements("ir"))
                {
                    //if (ir.Elements("r").Count() == 0) { continue; }
                    XAttribute view_att = ir.Attribute("view");
                    if (!astable && (view_att == null || view_att.Value != "largeicons"))
                    {
                        string type_id = ir.Attribute("type").Value;
                        iprop = ip.Attribute("prop").Value;
                        <div>
                            @ir.Element("label").Value
                            @if (edit)
                            {
                                string targetId = "_" + iprop.Substring(iprop.LastIndexOf('/') + 1) + "_" + type_id.Substring(iprop.LastIndexOf('/') + 1);
                                string parss = "firsttime=True&bid=" + @id + "&eid=create888&etype=" + @type_id + "&iprop=" + @iprop +
                                    "&nc=" + @ir.Element("header").Elements().Count() + "&d=" + (new System.Random()).Next();
                                <span>
                                    [
                                    @*@Ajax.ActionLink("нов", "EditForm", new { firsttime = true, bid = id, eid = "create888", etype = type_id, iprop = iprop, nc = ir.Element("header").Elements().Count(), d = System.DateTime.Now.Ticks }, new AjaxOptions()
                                        {
                                        HttpMethod = "Post",
                                        InsertionMode = InsertionMode.InsertBefore, //.InsertAfter,
                                        UpdateTargetId = "_" + iprop.Substring(iprop.LastIndexOf('/') + 1) +
                                        "_" + type_id.Substring(iprop.LastIndexOf('/') + 1)
                                        })*@
                                    @*<a data-ajax="true" data-ajax-method="Post" data-ajax-mode="before" data-ajax-update="#@targetId"
                                       href="~/Home/EditForm?firsttime=True&amp;bid=@id&amp;eid=create888&amp;etype=@type_id&amp;iprop=@iprop&amp;nc=@ir.Element("header").Elements().Count()&amp;d=@System.DateTime.Now.Ticks">нов</a>*@
                                    <a href="" onclick="event.preventDefault(); HttpAsk('get', '@Url.Content("~/Home/EditForm")', '@parss', '@targetId', 'before', null)">нов</a>
                                    ]
                                </span>
                            }
                        </div>
                    }
                    if (!astable && (view_att != null && view_att.Value == "largeicons"))
                    {
                        var elementset = ir.Elements("r").OrderBy(rr => rr.Value);
                        string[] doclist = elementset.Where(rr => rr.Element("r") != null && rr.Element("r").Attribute("id") != null)
                            .Select(rr => rr.Element("r").Attribute("id").Value).ToArray();
                        //if (doclist.Length > 0) { Context.Session.SetString("doclist", doclist.Aggregate((sum, s) => sum += s)); }
                        <a href="?id=@id&at=1">T</a>
                        foreach (XElement r in elementset)
                        {
                            string url = "";
                            string src = "";
                            string src_ext = "";
                            List<string> parts = new List<string>();
                            foreach (var fr in r.Elements())
                            {
                                if (fr.Name == "c")
                                {
                                    parts.Add(fr.Value);
                                    continue;
                                }
                                if (fr.Name != "r") { continue; }

                                var rid_att = fr.Attribute("id");
                                var rty_att = fr.Attribute("type");
                                if (rid_att == null || rty_att == null) { continue; }
                                string rid = rid_att.Value;
                                string rty = rty_att.Value;
                                XAttribute uri_att = fr.Attribute("uri");
                                url = Url.Content("~/Home/Portrait?id=" + rid); //"?id=" + rid;
                                if (uri_att != null)
                                {
                                    src = Url.Content("~/Docs/GetPhoto?s=small&u=" + uri_att.Value);
                                    src_ext = Url.Content("~/Docs/GetPhoto?s=normal&u=" + uri_att.Value);
                                }
                                else
                                {
                                }
                                parts.AddRange(fr.Elements("c").Select(c => c.Value));
                                if (src == "")
                                {
                                    src = Url.Content("~/icons/medium/" +
                                        (TurgundaCommon.ModelCommon.icons.ContainsKey(rty) ? TurgundaCommon.ModelCommon.icons[rty] : "default_m.jpg"));
                                }
                            }
                            <div class="brick">
                                <div>
                                    <a href="@url">
                                        <img src="@src" />
                                    </a>
                                </div>
                                @if (parts.Count() > 0)
                                {
                                    int i = 0;
                                    <div style="font-size:smaller;">
                                        @foreach (var part in parts)
                                        {
                                            string colo = i % 2 == 0 ? "White" : "Silver"; i++;
                                            <span style="background-color:@colo;">@part</span>
                                        }
                                        @if (edit && !string.IsNullOrEmpty(src_ext))
                                        {
                                            var imguri = Url.Content("~/icons/Zoom_in_16.gif");
                                            <a href="@src_ext" target="_external"><img src="@imguri" alt="Посмотреть" style="border-width:0;" /></a>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        @*@helper HTable(XElement container, string id, string iprop, string ttype)*@
                        @*string prop = ip.Attribute("prop").Value;
                            bool candelete = prop != "http://fogid.net/o/father" && prop != "http://fogid.net/o/mother";
                            @HTable(ir, id, prop, ir.Attribute("type").Value, edit && candelete, candelete)
                            ==============================================================================*@

                        // Parameters
                        container = ir;
                        iprop = ip.Attribute("prop").Value;
                        ttype = ir.Attribute("type").Value;
                        candelete = true;

                        bodyid = iprop == null ? "_headerid_" : "_" + iprop.Substring(iprop.LastIndexOf('/') + 1) + "_" + ttype.Substring(iprop.LastIndexOf('/') + 1);
                        headerelements = container.Element("header").Elements().ToArray();
                        <table>
                            <thead>
                                <tr>
                                    @foreach (XElement f in headerelements)
                                    {
                                        <th>
                                            @if (f.Name == "f")
                                            {@f.Value }
                                        else
                                        { @f.Element("label").Value}
                                        </th>
                                    }
                                    @if (edit)
                                    {
                                        <td></td>
                                    }
                                </tr>
                            </thead>
                            <tbody id="@bodyid">
                                @foreach (XElement r in container.Elements("r"))
                                {
                                    string eid = r.Attribute("id").Value;
                                    <tr id='@eid' valign="top">
                                        @{
                                            XElement[] rowelements = r.Elements().ToArray();
                                            for (int i = 0; i < rowelements.Length; i++)
                                            {
                                                XElement cr = rowelements[i];
                                                XElement f = headerelements[i];
                                                if (cr.Name == "c")
                                                {
                                                    XAttribute valueTypeAtt = f.Attribute("valueType");
                                                    string value = cr.Value;
                                                    if (valueTypeAtt != null) { value = TurgundaCommon.ModelCommon.GetEnumStateLabel(valueTypeAtt.Value, value); }
                                                    <td class="d">@value</td>
                                                }
                                                else
                                                {
                                                    XAttribute d_att = cr.Attribute("id");
                                                    string d_id = d_att == null ? "" : d_att.Value;
                                                    XAttribute d_ty = cr.Attribute("type");
                                                    string d_tid = d_ty == null ? "" : d_ty.Value;
                                                    XElement fr = f.Elements("r").FirstOrDefault(rr => rr.Attribute("type").Value == d_tid);
                                                    XElement[] frow = new XElement[0];
                                                    if (fr != null)
                                                    {
                                                        frow = fr.Elements("f").ToArray();
                                                    }
                                                    //var qu = cr.Elements()
                                                    //    .Select(c => { return new XText(c.Value); }).ToArray();
                                                    bool isfirst = true;
                                                    int j = 0;
                                                    <td>
                                                        @foreach (XElement c in cr.Elements())
                                                        {
                                                            string val = c.Value;
                                                            if (j < frow.Length)
                                                            {
                                                                var valueTypeAtt = frow[j].Attribute("valueType");
                                                                if (valueTypeAtt != null)
                                                                {
                                                                    val = TurgundaCommon.ModelCommon.GetEnumStateLabel(valueTypeAtt.Value, val);
                                                                }
                                                            }
                                                            if (!string.IsNullOrEmpty(val) && isfirst)
                                                            {
                                                                string url = Url.Content("~/Home/Portrait?id=" + d_id);
                                                                isfirst = false;
                                                                <a href="@url">@val</a>
                                                            }
                                                            else
                                                            {
                                                                <span>@val</span>
                                                            }
                                                            j++;
                                                        }
                                                    </td>
                                                }
                                            }
                                            if (edit)
                                            {
                                                string url1 = Url.Content("~/Home/EditForm?firsttime=True&bid=" + id +
                                                "&eid=" + eid + "&etype=" + ttype + "&iprop=" + iprop +
                                                "&nc=" + r.Elements().Count() + "&d=" + System.DateTime.Now.Ticks);
                                                var parss = "firsttime=True&bid=" + id + "&eid=" + eid + "&etype=" + ttype +
                "&iprop=" + iprop + "&nc=" + r.Elements().Count() + "&d=" + (new System.Random()).Next();

                                                    <td>
                                                        @*@Ajax.ActionLink("ред", "EditForm", new { firsttime = true, bid = id, eid = eid, etype = ttype, iprop = iprop, nc = r.Elements().Count(), d = System.DateTime.Now.Ticks }, new AjaxOptions()
        {
            HttpMethod = "Post",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = eid
        })*@
                                                        @*<a data-ajax="true" data-ajax-method="Post" data-ajax-mode="replace" data-ajax-update="#@eid"
        href="@url1">ред</a>*@
                                                        <a href="" onclick="event.preventDefault(); HttpAsk('get', '@Url.Content("~/Home/EditForm")', '@parss', '@eid', 'replace', null)">ред</a>

                                                        @if (candelete)
                                                        {
                                                            @*@Ajax.ActionLink("x", "DeleteRow", new { eid = eid, d = DateTime.Now.Ticks }, new AjaxOptions()
            {
                HttpMethod = "Get",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = eid,
                Confirm = "Уничтожить?"
            })*@
                                                            @*<a data-ajax="true" data-ajax-confirm="Уничтожить?" data-ajax-method="Get" data-ajax-mode="replace" data-ajax-update="#@eid"
                                                               href="~/Home/DeleteRow?eid=@eid&amp;d=@System.DateTime.Now.Ticks">x</a>*@
                                                            <a href="" onclick="event.preventDefault(); HttpAsk('get', '@Url.Content("~/Home/DeleteRow")', 'eid=@eid&amp;d=@System.DateTime.Now.Ticks', '@eid', 'replace', 'уничтожить?');">x</a>
                                                        }
                                                    </td>
                                            }
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }












                }
            </td>
        </tr>
    }
</table>

@*
    <pre>@Model.xresult.ToString()</pre>
*@

@if (Model.look != null)
{
<pre>@Model.look.ToString()</pre>
}
