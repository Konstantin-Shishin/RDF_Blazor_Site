@page "/{Id?}"
@using RDFEngine

<div>@Id</div>

<div>
    <input @bind="searchsample" />
    <select @bind="searchtype">
        <option value=""></option>
        @foreach (var typ in typs.Where(t => Infobase.rontology.LabelOfOnto(t) != null)) //TODO: ���� �� ����� ���������...
        {
            <option value="@typ">@(Infobase.rontology.LabelOfOnto(typ))</option>
        }
    </select>
</div>
@if (!string.IsNullOrEmpty(searchsample))
{
    IEnumerable<RRecord> query = null;
    //query = Infobase.engine.RSearch(searchsample);
    query = (new RDFEngine.RXEngine()).RSearch(searchsample);

    if (string.IsNullOrEmpty(searchtype)) query = query.Where(r => typs.Contains(r.Tp));
    else query = query.Where(r => r.Tp == searchtype);
    foreach (RRecord rec in query.OrderBy(r => Infobase.GetName(r)))
    {
        <div>
            <a href="javascript:void(0)" @onclick="@(e => SearchResultClick(rec))">@Infobase.GetName(rec)</a>
            <span style="color:red;">@(Infobase.rontology.LabelOfOnto(rec.Tp))</span>
        </div>
    }
}
@if (model != null)
{
    var m = model;
    <table border="1">
        <tr>
            <td colspan="@m.row.Length">@gt(m.Tp) @m.Id</td>
        </tr>
        <tr>
            @foreach (var c in m.row)
            {
                <td>@gt(c.Prop)</td>
            }
        </tr>
        <tr>
            @for (int i = 0; i < m.row.Length; i++)
            {
                var c = m.row[i];
                if (c is RField)
                {
                    <td @onclick="@(e =>EditField(c.Prop))">@(((RField)c).Value)</td>
                }
                else if (c is RDirect && ((RDirect)c).DRec != null)
                {
                    var rr = ((RDirect)c).DRec;
                    <td><a href='?id=@(rr.Id)'>@(GetName(rr))</a></td>
                }
            }
        </tr>
    </table>

    <div hidden="@dialogIsClosed"> <input type="text" @bind="value" />  <input type="submit" @onclick="e=>OkClick()"/> </div>

    @foreach (var p in m.inv)
    {
        foreach (var t in p.lists)
        {
            RRecord defrow = t.list[0];
            <table border="1">
                <tr>
                    <td colspan="@(defrow.Props.Length-1)">
                        <span>@git(p.Prop)</span>
                        <span>@gt(defrow.Tp)</span>
                    </td>
                </tr>
                <tr>
                    @foreach (var c in defrow.Props)
                    {
                        if (c.Prop == p.Prop) { continue; }
                        <td>@gt(c.Prop)</td>
                    }
                </tr>
                @foreach (var r in t.list)
                {
                    <tr>
                        @foreach (var c in r.Props)
                        {
                            if (c.Prop == p.Prop) { continue; }
                            if (c is RField)
                            {
                                <td>@(((RField)c).Value)</td>
                            }
                            else if (c is RDirect && ((RDirect)c).DRec != null)
                            {
                                var rr = ((RDirect)c).DRec;

                                // <td><a href='?id=@(rr.Id)'>@(GetName(rr))</a></td>
                                <td><a href='javascript:void(0)' @onclick="@(e =>LinkClick(rr.Id))">@(GetName(rr))</a></td>
                            }
                            else
                            {
                                <td>???</td>
                            }
                        }
                    </tr>
                }

            </table>

        }
    }

}
<div>
    @look
</div>

@code{

    [Parameter]
    public string Id { get; set; }

    private Models.P3Model model;

    private string searchsample { get; set; }
    private string searchtype { get; set; }
    private string look { get; set; }

    private void OkClick()
    {
        look="OK";

        @*
        model.row = model.row.Select(pr =>
          {
              if (pr.Prop == propvalue)
              {
                  return new RField() { Prop = propvalue, Value = value };
              }
              else
              {
                  return pr;
              }
          }
        ).ToArray();\
        *@
        
        Console.WriteLine(model.Id);
        Console.WriteLine(model.Tp);
        foreach(var prop in model.row){
            RField field = (RField)prop;
            Console.WriteLine($"{field.Prop} {field.Value}");
        }

        RRecord record = new RRecord(){Id=model.Id,Tp=model.Tp,
        Props=model.row.Select(pr=>
        {
            if(pr is RField){
                
                RField field = (RField)pr;
                if (field.Prop==propvalue){
                    return (RProperty)(new RField(){Prop=field.Prop,Value=value});
                }
                return (RProperty)(new RField(){Prop=field.Prop,Value=field.Value});
                
            }
            else if(pr is RDirect){
                RDirect rdir = (RDirect)pr;
                return (RProperty)(new RLink(){Prop = rdir.Prop, Resource=rdir.DRec.Id});
            }
            else{
                return (RProperty)(null);
            }
        }).ToArray()
        };
        Infobase.engine.Update(record);
        Build(record.Id);

        dialogIsClosed = true;

    }

    private string value { get; set; }
    private bool dialogIsClosed = true;
    private string svalue { get; set; }
    private string propvalue { get; set; }


    private void EditField(string p)
    {
        propvalue = p;
        value = model.row.Where(pr => pr.Prop == propvalue).Cast<RField>().Select(f => f.Value).FirstOrDefault();
        look = propvalue + " " + value;
        dialogIsClosed = false;
    }

    private string[] typs = Infobase.rontology.DescendantsAndSelf("http://fogid.net/o/sys-obj").ToArray();

    private void LinkClick(string ident)
    {
        Build(ident);
    }

    private void Build(string Id)
    {
        var erec = Infobase.engine.BuildPortrait(Id);
        this.model = (new Models.P3Model()).Build(erec); // ����� ������ ������������!
    }
    protected override void OnInitialized() // = On Page Load
    {
        if (Id != null)
        {
            Build(Id);
        }
    }

    private void SearchResultClick(RRecord rec)
    {
        searchsample = null;
        Build(rec.Id);
    }

    // ��������� ����� �� ������
    private string GetName(RRecord rec) => ((RField)rec.Props.FirstOrDefault(p => p is RField && p.Prop == "http://fogid.net/o/name"))?.Value;

    // ��������� �������� ����� ���������
    private string gt(string code) => Infobase.rontology.LabelOfOnto(code);
    private string git(string code) => Infobase.rontology.InvLabelOfOnto(code);

}